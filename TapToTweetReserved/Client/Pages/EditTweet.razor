@page "/edit/{Id}"
@attribute [Authorize]
@inject NavigationManager NavigationManager
@inject Toolbelt.Blazor.I18nText.I18nText I18nText
@inject ReservedTweets.ReservedTweetsClient ReservedTweetsClient

@if (EditTarget != null)
{
    <EditTweetForm TextToTweet="@EditTarget.TextToTweet" OnOK="OnOK"></EditTweetForm>
}

@code
{
    [CascadingParameter]
    private UIContext UIContext { get; set; } = null!;

    private Localized Localized = new();

    [Parameter]
    public string? Id { get; set; }

    private ReservedTweet? EditTarget;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(this.Id)) throw new InvalidOperationException("The Id parameter is null or empty.");

        this.UIContext.SetMenuItem(/* NO MENU ITEMS */);

        this.Localized = await I18nText.GetTextTableAsync<Localized>(this);
        this.UIContext.PageTitle = () => Localized.EditMode_Edit;
        this.EditTarget = await this.ReservedTweetsClient.GetAsync(new ReservedTweetId(this.Id));
    }

    private async Task OnOK(string textToTweet)
    {
        if (this.EditTarget == null) throw new NullReferenceException();
        this.EditTarget.TextToTweet = textToTweet;
        await this.ReservedTweetsClient.UpdateAsync(this.EditTarget);
        this.NavigationManager.NavigateTo("/list-of-editmode");
    }
}