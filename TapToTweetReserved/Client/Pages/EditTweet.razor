@page "/edit/{Id:guid}"
@attribute [Authorize]
@inject IJSRuntime JS
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

@if (EditTarget != null)
{
    <EditTweetForm TextToTweet="@EditTarget.TextToTweet" OnOK="OnOK"></EditTweetForm>
}

@code
{
    [CascadingParameter]
    private UIContext UIContext { get; set; }

    [Parameter]
    public Guid Id { get; set; }

    private ReservedTweet EditTarget;

    protected override async Task OnInitializedAsync()
    {
        this.UIContext.PageTitle = "EDIT MODE - Edit";
        this.UIContext.SetMenuItem(/* NO MENU ITEMS */);

        this.EditTarget = await this.HttpClient.GetJsonAsync<ReservedTweet>($"/api/reservedtweets/{this.Id}");
        this.JS.SetInitialFocus();
    }

    private async Task OnOK(string textToTweet)
    {
        this.EditTarget.TextToTweet = textToTweet;
        await this.HttpClient.PutJsonAsync($"/api/reservedtweets/{this.Id}", this.EditTarget);
        this.NavigationManager.NavigateTo("/list-of-editmode");
    }
}